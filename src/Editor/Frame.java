/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Editor;
import java.awt.*;
import javax.swing.*;
import java.util.*;
/**
 *
 * @author yc
 */
public class Frame extends javax.swing.JFrame {

    private ArrayList mapList;
    map thismap;
    DefaultListModel model = new DefaultListModel();
    /**
     * Creates new form Frame
     */
    public Frame() {
        mapList = new ArrayList();
        mapList.add(new map());
        initComponents();
        thismap=(map)mapList.get(0);
    }

    FileChooser filechooser;
    private int mouse=0;
    private String blockkind="";                             //"water","sand","trap","stick"
    private int numofcomp=0;                                   //绘图区内所有元素的数量，包括背景图在内
    private String picpath="";
    private int x_painpanel=-1;                                    //鼠标在panel_pain里面的坐标
    private int y_painpanel=-2;
    private boolean hasstart=false;
    private boolean hasend=false;
    private boolean hasbg=false;
    public void usemouse(int which,String kind,String path){           // which=1 : 左键   which=2 : 右键
        mouse=which;
        blockkind=kind;
        picpath=path;
    }
    public void releasemouse(int which){
        mouse-=which;
        blockkind="";
        picpath="";
    }
    public int getmouse(){
        return mouse;
    }
    public String getkind(){
        return blockkind;
    }
    public String getpic(){
        return picpath;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_tools = new javax.swing.JPanel();
        tools_separator = new javax.swing.JSeparator();
        tool1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        tool2 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        start = new javax.swing.JButton();
        start1 = new javax.swing.JButton();
        panel_pain = new javax.swing.JPanel();
        panel_trigger = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        x1 = new javax.swing.JComboBox();
        y1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        x2 = new javax.swing.JComboBox();
        y2 = new javax.swing.JComboBox();
        x1y1 = new javax.swing.JButton();
        x2y2 = new javax.swing.JButton();
        panel_log = new javax.swing.JPanel();
        panel_log_scroll = new javax.swing.JScrollBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        panel_page = new javax.swing.JPanel();
        menu = new javax.swing.JMenuBar();
        menu_new = new javax.swing.JMenu();
        menu_open = new javax.swing.JMenu();
        menu_save = new javax.swing.JMenu();
        menu_test = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        panel_tools.setBackground(new java.awt.Color(255, 255, 255));
        panel_tools.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Elements", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N
        panel_tools.setToolTipText("");
        panel_tools.setName(""); // NOI18N

        tool1.setBackground(new java.awt.Color(255, 255, 255));
        tool1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/earth1.png"))); // NOI18N
        tool1.setText("earth");
        tool1.setToolTipText("");
        tool1.setBorder(null);
        tool1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tool1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tool1.setMaximumSize(new java.awt.Dimension(100, 100));
        tool1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tool1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tool1MouseDragged(evt);
            }
        });
        tool1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                earthMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tool1MouseReleased(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/block1.png"))); // NOI18N
        jButton1.setText("block");
        jButton1.setBorder(null);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tool1MouseDragged(evt);
            }
        });
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                blockMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tool1MouseReleased(evt);
            }
        });

        tool2.setBackground(new java.awt.Color(255, 255, 255));
        tool2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/stab1.png"))); // NOI18N
        tool2.setText("stab");
        tool2.setToolTipText("");
        tool2.setBorder(null);
        tool2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tool2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tool2.setMaximumSize(new java.awt.Dimension(100, 100));
        tool2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tool2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tool1MouseDragged(evt);
            }
        });
        tool2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                stabMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tool1MouseReleased(evt);
            }
        });
        tool2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tool2ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/monster1.png"))); // NOI18N
        jButton2.setText("monster");
        jButton2.setBorder(null);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tool1MouseDragged(evt);
            }
        });
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                monsterMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tool1MouseReleased(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/block1.png"))); // NOI18N
        jButton3.setText("block2");
        jButton3.setBorder(null);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tool1MouseDragged(evt);
            }
        });
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                block2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tool1MouseReleased(evt);
            }
        });

        start.setBackground(new java.awt.Color(255, 255, 255));
        start.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/start1.png"))); // NOI18N
        start.setText("start");
        start.setBorder(null);
        start.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        start.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        start.setName("start"); // NOI18N
        start.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        start.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tool1MouseDragged(evt);
            }
        });
        start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                startMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tool1MouseReleased(evt);
            }
        });

        start1.setBackground(new java.awt.Color(255, 255, 255));
        start1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/end1.png"))); // NOI18N
        start1.setText("end");
        start1.setBorder(null);
        start1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        start1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        start1.setName("start"); // NOI18N
        start1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        start1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tool1MouseDragged(evt);
            }
        });
        start1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                endMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tool1MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout panel_toolsLayout = new javax.swing.GroupLayout(panel_tools);
        panel_tools.setLayout(panel_toolsLayout);
        panel_toolsLayout.setHorizontalGroup(
            panel_toolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tools_separator)
            .addGroup(panel_toolsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_toolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_toolsLayout.createSequentialGroup()
                        .addComponent(tool1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_toolsLayout.createSequentialGroup()
                        .addComponent(start1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_toolsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panel_toolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_toolsLayout.createSequentialGroup()
                                .addComponent(tool2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        panel_toolsLayout.setVerticalGroup(
            panel_toolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_toolsLayout.createSequentialGroup()
                .addGroup(panel_toolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tool1, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(panel_toolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(start1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tools_separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_toolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tool2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(166, 166, 166))
        );

        panel_pain.setBackground(new java.awt.Color(255, 255, 255));
        panel_pain.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        panel_pain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelpainMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panelpainExited(evt);
            }
        });

        javax.swing.GroupLayout panel_painLayout = new javax.swing.GroupLayout(panel_pain);
        panel_pain.setLayout(panel_painLayout);
        panel_painLayout.setHorizontalGroup(
            panel_painLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 796, Short.MAX_VALUE)
        );
        panel_painLayout.setVerticalGroup(
            panel_painLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 596, Short.MAX_VALUE)
        );

        panel_trigger.setBackground(new java.awt.Color(255, 255, 255));
        panel_trigger.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Trigger", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        jButton4.setText("触发");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jLabel1.setText("触发器");

        jLabel2.setText("被触发");

        x1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));

        y1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", " " }));

        jLabel3.setText("x");

        jLabel4.setText("y");

        x2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));

        y2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", " " }));

        x1y1.setText("手选");
        x1y1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                x1y1MouseClicked(evt);
            }
        });

        x2y2.setText("手选");

        javax.swing.GroupLayout panel_triggerLayout = new javax.swing.GroupLayout(panel_trigger);
        panel_trigger.setLayout(panel_triggerLayout);
        panel_triggerLayout.setHorizontalGroup(
            panel_triggerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_triggerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_triggerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_triggerLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(panel_triggerLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel_triggerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panel_triggerLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(47, 47, 47)
                                .addComponent(jLabel4)
                                .addGap(53, 53, 53))
                            .addGroup(panel_triggerLayout.createSequentialGroup()
                                .addComponent(x1y1)
                                .addGap(18, 18, 18)
                                .addComponent(x1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(y1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24))))
                    .addGroup(panel_triggerLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(x2y2)
                        .addGap(18, 18, 18)
                        .addComponent(x2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(y2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))))
        );
        panel_triggerLayout.setVerticalGroup(
            panel_triggerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_triggerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_triggerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(11, 11, 11)
                .addGroup(panel_triggerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(x1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(y1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(x1y1))
                .addGap(18, 18, 18)
                .addGroup(panel_triggerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(panel_triggerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(x2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(y2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(x2y2)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        panel_log.setBackground(new java.awt.Color(255, 255, 255));
        panel_log.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Log", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        panel_log_scroll.setBackground(new java.awt.Color(0, 0, 0));
        panel_log_scroll.setForeground(new java.awt.Color(0, 0, 0));

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout panel_logLayout = new javax.swing.GroupLayout(panel_log);
        panel_log.setLayout(panel_logLayout);
        panel_logLayout.setHorizontalGroup(
            panel_logLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_logLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(18, 18, 18)
                .addComponent(panel_log_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panel_logLayout.setVerticalGroup(
            panel_logLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_log_scroll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panel_logLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        panel_page.setBackground(new java.awt.Color(255, 255, 255));
        panel_page.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "page", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        javax.swing.GroupLayout panel_pageLayout = new javax.swing.GroupLayout(panel_page);
        panel_page.setLayout(panel_pageLayout);
        panel_pageLayout.setHorizontalGroup(
            panel_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panel_pageLayout.setVerticalGroup(
            panel_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
        );

        menu_new.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menu_new.setText("背景图");
        menu_new.setMinimumSize(new java.awt.Dimension(50, 24));
        menu_new.setName(""); // NOI18N
        menu_new.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_newMouseClicked(evt);
            }
        });
        menu.add(menu_new);

        menu_open.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menu_open.setText("打开");
        menu_open.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_openMouseClicked(evt);
            }
        });
        menu.add(menu_open);

        menu_save.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menu_save.setText("暂存");
        menu_save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_saveMouseClicked(evt);
            }
        });
        menu.add(menu_save);

        menu_test.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menu_test.setText("保存并测试");
        menu.add(menu_test);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel_tools, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panel_pain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel_page, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panel_log, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_trigger, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panel_tools, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(panel_pain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel_page, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(panel_trigger, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel_log, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tool2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tool2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tool2ActionPerformed

    private void earthMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_earthMousePressed
        // TODO add your handling code here:
        if(!((JButton)evt.getSource()).isEnabled()) return;
        usemouse(evt.getButton(),"earth","./src/icon/earth.png");
    }//GEN-LAST:event_earthMousePressed
    
    private void tool1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tool1MouseDragged
        // TODO add your handling code here:
        if(!((JButton)evt.getSource()).isEnabled()) return;
        if(getmouse()!=1) return;
        int x=evt.getX()+evt.getComponent().getX();
        int y=evt.getY()+evt.getComponent().getY();
        double xx=evt.getX()+evt.getComponent().getX()+panel_tools.getX()-panel_pain.getX();
        double yy=evt.getY()+evt.getComponent().getY()+panel_tools.getY()-panel_pain.getY();
        int x_index=(int)xx/40; int y_index=(int)yy/40;
        //System.out.println("Tool1 pressed. "+x+" and "+y);
        String file=getpic();
        paint(x-10,y+50,file,(Graphics2D)this.getGraphics(),x_index,y_index);
    }//GEN-LAST:event_tool1MouseDragged

    private void tool1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tool1MouseReleased
        // TODO add your handling code here:
        if(!((JButton)evt.getSource()).isEnabled()) return;
        if(getmouse()!=1) return;
        if(x_painpanel==-1 || y_painpanel==-1) return;
        if(getkind()=="start"){
            if(hasstart==true){
                JOptionPane.showMessageDialog(null, "Start point cannot be more than one.", "alert", JOptionPane.ERROR_MESSAGE);
                return;
            }
            else hasstart=true;
        }
        if(getkind()=="end"){
            if(hasend==true){
                JOptionPane.showMessageDialog(null, "End point cannot be more than one.", "alert", JOptionPane.ERROR_MESSAGE);
                return;
            }
            else hasend=true;
        }
        double xx=evt.getX()+evt.getComponent().getX()+panel_tools.getX()-panel_pain.getX();double yy=evt.getY()+evt.getComponent().getY()+panel_tools.getY()-panel_pain.getY();
        int x_index=(int)xx/40; int y_index=(int)yy/40;
        JButton block=new JButton();
        block.setName(getkind()+"_"+numofcomp);
        block.setBackground(new java.awt.Color(255, 255, 255));
        //getClass().getResource(getpic()
        block.setIcon(new javax.swing.ImageIcon(getpic()));
        block.setText("");
        block.setToolTipText("");
        block.setBorder(null);
        block.setBorderPainted(false);
        block.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        block.setSize(40, 40);
        block.setLocation(x_index*40, y_index*40);
        block.setContentAreaFilled(false);
        block.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panel_buttonMouseDragged(evt);
            }
        });
        block.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panel_buttonMouseReleased(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panel_buttonMousePressed(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panel_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panel_buttonMouseExited(evt);
            }
        });
        
        panel_pain.add(block,0);numofcomp++;
        repaint();
        thismap.addone(x_index,y_index,getkind());
        releasemouse(getmouse());
    }//GEN-LAST:event_tool1MouseReleased

    private void blockMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_blockMousePressed
        // TODO add your handling code here:
        if(!((JButton)evt.getSource()).isEnabled()) return;
        usemouse(evt.getButton(),"block","./src/icon/block.png");
    }//GEN-LAST:event_blockMousePressed

    private void stabMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stabMousePressed
        // TODO add your handling code here:
        if(!((JButton)evt.getSource()).isEnabled()) return;
        usemouse(evt.getButton(),"stab","./src/icon/stab.png");
    }//GEN-LAST:event_stabMousePressed

    private void monsterMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monsterMousePressed
        // TODO add your handling code here:
        if(!((JButton)evt.getSource()).isEnabled()) return;
        usemouse(evt.getButton(),"monster","./src/icon/monster.png");
    }//GEN-LAST:event_monsterMousePressed

    private void block2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_block2MousePressed
        // TODO add your handling code here:
        if(!((JButton)evt.getSource()).isEnabled()) return;
        usemouse(evt.getButton(),"block","./src/icon/block.png");
    }//GEN-LAST:event_block2MousePressed

    private void panelpainMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelpainMouseEntered
        // TODO add your handling code here:
        x_painpanel=evt.getX();
    }//GEN-LAST:event_panelpainMouseEntered

    private void panelpainExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelpainExited
        // TODO add your handling code here:
        x_painpanel=-1;
    }//GEN-LAST:event_panelpainExited

    private void startMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMousePressed
        // TODO add your handling code here:
        if(!((JButton)evt.getSource()).isEnabled()) return;
        usemouse(evt.getButton(),"start","./src/icon/start.png");
    }//GEN-LAST:event_startMousePressed

    private void endMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_endMousePressed
        // TODO add your handling code here:
        if(!((JButton)evt.getSource()).isEnabled()) return;
        usemouse(evt.getButton(),"end","./src/icon/end.png");
    }//GEN-LAST:event_endMousePressed

    private void menu_newMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_newMouseClicked
        // TODO add your handling code here:
        if(!((JMenu)evt.getSource()).isEnabled()) return;
        if(hasbg==true){
            JOptionPane.showMessageDialog(null, "Background cannot be more than one.", "alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        filechooser = new FileChooser();
        filechooser.newmap();
        if(filechooser.getPath().matches("")) return;
        thismap.setName(filechooser.getName());   //先把名字给他
        String map=filechooser.getPath();
        //以下是添加图片背景程序
        ImageIcon Jpanel_back = new ImageIcon(map);
        JButton back=new JButton();
        back.setIcon(Jpanel_back);
        back.setSize(800, 600);
        back.setLocation(0, 0);
        back.setText("");
        back.setToolTipText("");
        back.setBorder(null);
        back.setBorderPainted(false);
        back.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                y_painpanel=evt.getY();
                x_painpanel=evt.getX();
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                y_painpanel=-1;
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                if(evt.getButton()==3){
                    panel_pain.remove(evt.getComponent());
                    thismap.deletemap();
                    numofcomp--;
                    repaint();
                    hasbg=false;
                }
            }
        });
        panel_pain.add(back, -1);
        hasbg=true;numofcomp++;
        thismap.addmap(map,"background");
        repaint();
    }//GEN-LAST:event_menu_newMouseClicked

    private void menu_openMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_openMouseClicked
        // TODO add your handling code here:
        if(!((JMenu)evt.getSource()).isEnabled()) return;
        filechooser = new FileChooser();
        filechooser.openfile();
        String openpath=filechooser.getPath();
        //下面是文件读入程序
        filechooser.openfile();
        filechooser.open(mapList);
        thismap=(map)mapList.get(0);
        panel_pain.removeAll(); numofcomp=0;
        //先把地图读入
        ArrayList newmap=thismap.getmap(); Iterator it=newmap.iterator();
        map.blocks newbg=(map.blocks)newmap.get(0);
        while(it.hasNext()){
            newbg=(map.blocks)it.next();
            if(newbg.getkind().matches("background")) break;
        }
        ImageIcon Jpanel_back = new ImageIcon(newbg.getURL());
        JButton back=new JButton();
        back.setIcon(Jpanel_back);
        back.setSize(800, 600);
        back.setLocation(0, 0);
        back.setText("");
        back.setToolTipText("");
        back.setBorder(null);
        back.setBorderPainted(false);
        back.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                y_painpanel=evt.getY();
                x_painpanel=evt.getX();
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                y_painpanel=-1;
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if(evt.getButton()==3){
                    panel_pain.remove(evt.getComponent());
                    thismap.deletemap();
                    numofcomp--;
                    repaint();
                    hasbg=false;
                }
            }
        });
        panel_pain.add(back, -1);
        hasbg=true;numofcomp++;
        //然后是其他方块
        repaint();
    }//GEN-LAST:event_menu_openMouseClicked

    private void menu_saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_saveMouseClicked
        // TODO add your handling code here:
        if(!((JMenu)evt.getSource()).isEnabled()) return;
        if(!(hasstart && hasend && hasbg)){
            JOptionPane.showMessageDialog(null, "There are no start point or end point or background. Cannot save.", "alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        filechooser = new FileChooser();
        filechooser.savefile();
        //下面是保存文件的程序
        filechooser.save(thismap);
    }//GEN-LAST:event_menu_saveMouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        if(!((JButton)evt.getSource()).isEnabled()) return;
        if(evt.getButton()!=1) return;
        int chufax=Integer.parseInt((String)x1.getSelectedItem())-1;
        int chufay=Integer.parseInt((String)y1.getSelectedItem())-1;
        int chufaedx=Integer.parseInt((String)x2.getSelectedItem())-1;
        int chufaedy=Integer.parseInt((String)y2.getSelectedItem())-1;
        thismap.addTriggers(chufax,chufaedx,chufay,chufaedy);
        model.addElement("trigger:"+chufax+","+chufay+" triggered:"+chufaedx+","+chufaedy);
        jList1.setModel(model);
        repaint();
    }//GEN-LAST:event_jButton4MouseClicked

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        if(!((JList)evt.getSource()).isEnabled()) return;
        if(evt.getSource()==null) return;
        if(evt.getButton()==3){
            int selected=jList1.getSelectedIndex();
            String s=(String)model.get(selected);
            String s1[]=s.split(" ");
            String s11[]=(s1[0].substring(8)).split(",");
            String s12[]=(s1[1].substring(10)).split(",");
            int x1=Integer.parseInt(s11[0]);
            int y1=Integer.parseInt(s11[1]);
            int x2=Integer.parseInt(s12[0]);
            int y2=Integer.parseInt(s12[1]);
            model.remove(selected);
            jList1.setModel(model);
            thismap.delTriigers(x1, x2, y1, y2);
            repaint();
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void x1y1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_x1y1MouseClicked
        // TODO add your handling code here:
        if(!((JButton)evt.getSource()).isEnabled()) return;
        if(evt.getButton()==3) return;
        x1.setEnabled(false);y1.setEnabled(false);
        x2.setEnabled(false);y2.setEnabled(false);x2y2.setEnabled(false);
        menu_new.setEnabled(false);menu_open.setEnabled(false);menu_save.setEnabled(false);menu_test.setEnabled(false);
        tool1.setEnabled(false);tool2.setEnabled(false);jButton1.setEnabled(false);jButton2.setEnabled(false);jButton3.setEnabled(false);
        start.setEnabled(false);start1.setEnabled(false);jButton4.setEnabled(false);jList1.setEnabled(false);
        JButton cover = new JButton();
        cover.setLocation(1, 1);
        cover.setSize(800, 600);
        cover.setText("");
        cover.setToolTipText("");
        cover.setBorder(null);
        cover.setBorderPainted(false);
        cover.setContentAreaFilled(false);
        cover.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Graphics2D g = (Graphics2D)panel_pain.getGraphics();
        AlphaComposite ac;
        ac = AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.01f);
        g.setComposite(ac);
        Image im_back = getToolkit().getImage("./src/icon/mesh.png");
        ImageIcon i=new ImageIcon(im_back);
        cover.setIcon(i);
        cover.addMouseListener(new java.awt.event.MouseAdapter() {
            
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coverMouseClicked(evt);
            }
        });
        panel_pain.add(cover,0);
        repaint();
    }//GEN-LAST:event_x1y1MouseClicked

    
    private void coverMouseClicked(java.awt.event.MouseEvent evt){
        x1.setEnabled(true);y1.setEnabled(true);
        x2.setEnabled(true);y2.setEnabled(true);x2y2.setEnabled(true);
        menu_new.setEnabled(true);menu_open.setEnabled(true);menu_save.setEnabled(true);menu_test.setEnabled(true);
        tool1.setEnabled(true);tool2.setEnabled(true);jButton1.setEnabled(true);jButton2.setEnabled(true);jButton3.setEnabled(true);
        start.setEnabled(true);start1.setEnabled(true);jButton4.setEnabled(true);jList1.setEnabled(true);
        panel_pain.remove((JButton)evt.getSource());
        if(evt.getButton()==3) { repaint();return;}
        int xx=evt.getX()/40; int yy=evt.getY()/40;
        x1.setSelectedIndex(xx+1); y1.setSelectedIndex(yy+1);
        repaint();
    }
    
    private void panel_buttonMouseDragged(java.awt.event.MouseEvent evt) {                                          
        // TODO add your handling code here:
        if(getmouse()!=1) return;
        JButton button=(JButton)evt.getSource();
        Icon icon = button.getIcon();
        int x=evt.getX()+evt.getComponent().getX();
        int y=evt.getY()+evt.getComponent().getY();
        int x_index=(int)x/40; int y_index=(int)y/40;
        Graphics2D g = (Graphics2D)panel_pain.getGraphics();
        AlphaComposite ac;
        ac = AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.1f);
        g.setComposite(ac);
        if(x_painpanel!=-1 || y_painpanel!=-1){
            Image im_back = getToolkit().getImage("./src/icon/im_back.png");
            g.drawImage(im_back, x_index*40, y_index*40, this);
        }
        icon.paintIcon(panel_pain, this.getGraphics(), x+panel_pain.getX()-20, y+panel_pain.getY()+35);
        button.setVisible(false);
        repaint();
    }                                         

    private void panel_buttonMouseReleased(java.awt.event.MouseEvent evt) {                                           
        // TODO add your handling code here:
        if(getmouse()!=1) {
            releasemouse(getmouse());
            repaint();
            return;
        }
        JButton button=(JButton)evt.getSource();
        if(x_painpanel==-1 || y_painpanel==-1){
            button.setVisible(true);
            repaint();
            return;
        }
        int x=evt.getX()+evt.getComponent().getX(); int y=evt.getY()+evt.getComponent().getY();
        int x_index=(int)x/40; int y_index=(int)y/40;
        button.setLocation(x_index*40, y_index*40);
        button.setVisible(true);
        thismap.addone(x_index, y_index, thismap.kind_buff);
        repaint();
        releasemouse(getmouse());
    }                                          

    private void panel_buttonMousePressed(java.awt.event.MouseEvent evt) {                                          
        // TODO add your handling code here:
        if(evt.getButton()==1) {
            usemouse(1,"","");
            thismap.deleteone(((JButton)evt.getSource()).getX()/40, ((JButton)evt.getSource()).getY()/40);
            //System.out.println(thismap.getmap().size());
            return;
        }
        else if(evt.getButton()==3){
            StringBuffer s=new StringBuffer(((JButton)evt.getSource()).getName());
            if((s.substring(0,5)).matches("start") || (s.substring(0,3)).matches("end")) {
                JOptionPane.showMessageDialog(null, "Start or end point cannot be deleted.", "alert", JOptionPane.ERROR_MESSAGE);
                return;
            }
            usemouse(3,"","");
            panel_pain.remove((JButton)evt.getSource());
            if(((JButton)evt.getSource()).getHeight()>50)
                thismap.deletemap();
            else
                thismap.deleteone(((JButton)evt.getSource()).getX()/40, ((JButton)evt.getSource()).getY()/40);
            //System.out.println(thismap.getmap().size());
            numofcomp--;
            repaint();
        }
        else {}
    } 
    public void panel_buttonMouseEntered(java.awt.event.MouseEvent evt) {
        x_painpanel=evt.getX();
    }
    public void panel_buttonMouseExited(java.awt.event.MouseEvent evt) {
        
    }
    public void paint(int x,int y,String file,Graphics2D g,int x_index,int y_index){
        repaint();
        Image im = getToolkit().getImage(file);
        g.drawImage(im, x, y, this);
        g.setPaintMode();
        AlphaComposite ac;
        ac = AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.1f);
        g.setComposite(ac);
        //
        if(x_painpanel!=-1){
            Image im_back = getToolkit().getImage("./src/icon/im_back.png");
            g.drawImage(im_back, x_index*40+panel_pain.getX(), y_index*40+panel_pain.getY()+60, this);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenu menu_new;
    private javax.swing.JMenu menu_open;
    private javax.swing.JMenu menu_save;
    private javax.swing.JMenu menu_test;
    private javax.swing.JPanel panel_log;
    private javax.swing.JScrollBar panel_log_scroll;
    private javax.swing.JPanel panel_page;
    private javax.swing.JPanel panel_pain;
    private javax.swing.JPanel panel_tools;
    private javax.swing.JPanel panel_trigger;
    private javax.swing.JButton start;
    private javax.swing.JButton start1;
    private javax.swing.JButton tool1;
    private javax.swing.JButton tool2;
    private javax.swing.JSeparator tools_separator;
    private javax.swing.JComboBox x1;
    private javax.swing.JButton x1y1;
    private javax.swing.JComboBox x2;
    private javax.swing.JButton x2y2;
    private javax.swing.JComboBox y1;
    private javax.swing.JComboBox y2;
    // End of variables declaration//GEN-END:variables
}
